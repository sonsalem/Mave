/// Mixin Media Qurey
/// @param {point}

@mixin breakpoints($point) {
  @if $point == mobile {
    @media (width <= $mobile) {@content;}
  } @else if $point == small {
    @media (width >= $small) {@content;}
  } @else if $point == medium {
    @media (width >= $medium) {@content;}
  } @else if $point == large {
    @media (width >= $large) {@content;}
  }
}

/// @return {media}

/// Mixin Overlay
/// @param {color, alpha, index}


@mixin overlay($color : $mainColor, $alpha : .7) {
  background: rgba($color, $alpha);
}

/// @return {overlay}

/// Mixin Prefexier
/// @param {property, value, prefixes}

@mixin prefixer($property, $value, $prefixes: ('webkit', 'moz', 'o')) {

  #{$property}: $value;

  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
}

/// @return {prefixer}

/// Mixin Anmation
/// @param {animationName}

@mixin keyFrame($animationName) {
  @-webkit-keyframes #{$animationName} {@content};
  @keyframes #{$animationName} {@content};
}

/// @return {animation}

/// Mixin Gradient
/// @param {degree, colors..}

@mixin gradient($degree, $colors...) {
  @include prefixer(background, linear-gradient($degree, $colors));
}

/// @return {animation}

/// Mixin Before Background
/// @param {degree, colors..}

@mixin beforeBackground($degree, $colors...) {
    position: relative;
    overflow: hidden;
    z-index: 1;
  &::before {
    content: "";
    position: absolute;
    top: 0; right: 0; left: auto;
    width: 0; height: 100%;
    z-index: -1;
    @include prefixer(border-radius, inherit);
    @include prefixer(transition, width var(--transtion));
    @include gradient($degree, $colors);
  }
  &:hover::before {
    left: 0; right: auto;
    width: 100%;
  }
}

/// @return {bg}

/// @param {dimantion}

@mixin circle($dimentions) {
  width: $dimentions; height: $dimentions;
  border-radius: 50%;
}

/// @return {circle}

/// @param {}

@mixin centering {
  display: flex;
  align-items: center;
  justify-content: center;
}

/// @return {center}